version: "3"
services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - db
      - minio
    volumes:
      - ./static:/app/static
      - ./templates:/app/templates
    networks:
      - web
      - private
    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME:-geckosite}
      DB_USER: ${DB_USER:-geckosite}
      DB_PASSWORD: ${DB_PASSWORD:-geckosite}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-geckosite}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-geckosite}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      HCAPTCHA_SITE_KEY: ${HCAPTCHA_SITE_KEY}
      HCAPTCHA_SECRET_KEY: ${HCAPTCHA_SECRET_KEY}
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries",
          "1",
          "--spider",
          "http://localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: local
  db:
    image: postgres:alpine
    restart: unless-stopped
    networks:
      - private
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geckosite}
      POSTGRES_USER: ${POSTGRES_USER:-geckosite}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-geckosite}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-geckosite}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: local
  minio:
    image: minio/minio
    restart: unless-stopped
    command: server /data
    ports:
      - "9000:9000"
    networks:
      - private
    volumes:
      - minio_data:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-geckosite}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-geckosite}
      MINIO_REGION_NAME: eu-west-1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: local
networks:
  private:
  web:
    external: true
volumes:
  db_data:
  minio_data:
